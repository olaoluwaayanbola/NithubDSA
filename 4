  const n = matrix.length;
  let low = matrix[0][0];
  let high = matrix[n - 1][n - 1];

  while (low <= high) {
    const mid = Math.floor((low + high) / 2);
    let count = 0;
    let j = n - 1;

    for (let i = 0; i < n; i++) {
      while (j >= 0 && matrix[i][j] > mid) {
        j--;
      }
      count += (j + 1);
    }

    if (count < k) {
      low = mid + 1;
    } else {
      high = mid - 1;
    }
  }

  return low;


var isValid = function(s) {
  let brac = {
      '(':')',
      '{':'}',
      '[':']'
  }
  let stack = []
  
  for(let i of s) {
      if(brac[i]) {
          stack.push(brac[i])
          console.log(stack)
      } else {
          if (stack.pop() !== i) return false
      }
  }
    
  return !stack.length
};
isValid("()[]")
